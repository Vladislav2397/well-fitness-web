@function toRem($size) {
    $remSize: calc($size / 12) + rem;

    @return #{$remSize};
}

@function freezeRem($size) {
    $newSize: $size * 1.2 + px;

    @return #{$newSize};
}

@function percent-width(
    $count,
    $container,
    $gap,
    $column-count,
    $gap-direction
) {
    $column-width: calc(
        ($container - $gap * ($column-count - 1)) / $column-count
    );

    $column-width-percent: calc($column-width / $container) * 100%;
    $gap-width-percent: calc($gap / $container) * 100%;

    @if $count == 0 {
        @return $gap-width-percent;
    }

    $result: $column-width-percent * $count +
        ($gap-width-percent * ($count - 1));

    @if $gap-direction == 1 {
        $result: $result + $gap-width-percent;
    } @else if $gap-direction == 2 {
        $result: $result + ($gap-width-percent * 2);
    }

    @return $result;
}

@function d-columns($count, $gap-direction-count: 0) {
    @return percent-width($count, 1410, 30, 12, $gap-direction-count);
}

@function t-columns($count, $gap-direction-count: 0) {
    @return percent-width($count, 940, 20, 12, $gap-direction-count);
}

@function m-columns($count, $gap-direction-count: 0) {
    @return percent-width($count, 300, 20, 4, $gap-direction-count);
}

@function d_columns($count, $is-left-wide: false, $is-right-wide: false) {
    $container: 1410;
    $gap: 30;
    $column-count: 12;

    $column-width: calc(
        ($container - $gap * ($column-count - 1)) / $column-count
    );

    $column-width-percent: calc($column-width / $container) * 100%;
    $gap-width-percent: calc($gap / $container) * 100%;

    @if $count == 0 {
        @return $gap-width-percent;
    }

    $result: $column-width-percent * $count +
        ($gap-width-percent * ($count - 1));

    @if $is-left-wide {
        $result: $result + $gap-width-percent;
    }
    @if $is-right-wide {
        $result: $result + $gap-width-percent;
    }

    @return $result;
}

@mixin marginLevel($direction, $color, $sign: plus) {
    @each $spaceLevel, $pixels in $spaces {
        @if $spaceLevel == $color {
            @if $direction == 'both' {
                margin-top: map-get($spaces, $spaceLevel);
                margin-bottom: map-get($spaces, $spaceLevel);
            } @else {
                margin-#{$direction}: map-get($spaces, $spaceLevel);
            }
        }
    }
}

@mixin paddingLevel($direction, $color) {
    @each $spaceLevel, $pixels in $spaces {
        @if $spaceLevel == $color {
            @if $direction == 'both' {
                padding-top: map-get($spaces, $spaceLevel);
                padding-bottom: map-get($spaces, $spaceLevel);
            } @else {
                padding-#{$direction}: map-get($spaces, $spaceLevel);
            }
        }
    }
}

@mixin positionLevel($direction, $color, $sign: plus) {
    @each $spaceLevel, $pixels in $spaces {
        @if $spaceLevel == $color {
            @if (length(map-get($spaces, $spaceLevel)) == 1) {
                @if ($sign == plus) {
                    #{$direction}: nth(map-get($spaces, $spaceLevel), 1);
                } @else if($sign == minus) {
                    #{$direction}: -#{nth(map-get($spaces, $spaceLevel), 1)};
                }
            } @else {
                @if (
                    nth(map-get($spaces, $spaceLevel), 1) ==
                        nth(map-get($spaces, $spaceLevel), 2)
                ) {
                    @media (max-width: $maxTablet) {
                        @if ($sign == plus) {
                            #{$direction}: nth(
                                map-get($spaces, $spaceLevel),
                                1
                            );
                        } @else if($sign == minus) {
                            #{$direction}: -#{nth(
                                    map-get($spaces, $spaceLevel),
                                    1
                                )};
                        }
                    }

                    @media (min-width: $desktop) {
                        @if ($sign == plus) {
                            #{$direction}: nth(
                                map-get($spaces, $spaceLevel),
                                3
                            );
                        } @else if($sign == minus) {
                            #{$direction}: -#{nth(
                                    map-get($spaces, $spaceLevel),
                                    3
                                )};
                        }
                    }
                } @else if(
                    nth(map-get($spaces, $spaceLevel), 2) ==
                        nth(map-get($spaces, $spaceLevel), 3)
                )
                {
                    @media (max-width: $maxMobile) {
                        @if ($sign == plus) {
                            #{$direction}: nth(
                                map-get($spaces, $spaceLevel),
                                1
                            );
                        } @else if($sign == minus) {
                            #{$direction}: -#{nth(
                                    map-get($spaces, $spaceLevel),
                                    1
                                )};
                        }
                    }

                    @media (min-width: $tablet) and (max-width: $maxTablet) {
                        @if ($sign == plus) {
                            #{$direction}: nth(
                                map-get($spaces, $spaceLevel),
                                2
                            );
                        } @else if($sign == minus) {
                            #{$direction}: -#{nth(
                                    map-get($spaces, $spaceLevel),
                                    2
                                )};
                        }
                    }
                } @else {
                    @media (max-width: $maxMobile) {
                        @if ($sign == plus) {
                            #{$direction}: nth(
                                map-get($spaces, $spaceLevel),
                                1
                            );
                        } @else if($sign == minus) {
                            #{$direction}: -#{nth(
                                    map-get($spaces, $spaceLevel),
                                    1
                                )};
                        }
                    }

                    @media (min-width: $tablet) and (max-width: $maxTablet) {
                        @if ($sign == plus) {
                            #{$direction}: nth(
                                map-get($spaces, $spaceLevel),
                                2
                            );
                        } @else if($sign == minus) {
                            #{$direction}: -#{nth(
                                    map-get($spaces, $spaceLevel),
                                    2
                                )};
                        }
                    }

                    @media (min-width: $desktop) {
                        @if ($sign == plus) {
                            #{$direction}: nth(
                                map-get($spaces, $spaceLevel),
                                3
                            );
                        } @else if($sign == minus) {
                            #{$direction}: -#{nth(
                                    map-get($spaces, $spaceLevel),
                                    3
                                )};
                        }
                    }
                }
            }
        }
    }
}

@mixin _header-font($font-size, $line-height) {
    $quantity: length($font-size);

    @media (max-width: 649px) {
        font-size: nth($font-size, 1);
        line-height: nth($line-height, 1);
    }

    @media (min-width: 650px) and (max-width: 1199px) {
        font-size: nth($font-size, 2);
        line-height: nth($line-height, 2);
    }

    @media (min-width: 1200px) {
        font-size: nth($font-size, 3);
        line-height: nth($line-height, 3);
    }
}

@mixin _text-font($font-size, $line-height) {
    font-size: $font-size;
    line-height: $line-height;
}

@mixin _getWeight($weight) {
    @if $weight == regular {
        font-weight: 400;
    }

    @if $weight == medium {
        font-weight: 500;
    }

    @if $weight == bold {
        font-weight: 700;
    }

    @if $weight == extra {
        font-weight: 800;
    }
}

@mixin fontSize($name, $weight: none) {
    @each $tagName, $tagValue in $tags {
        @if $tagName == $name {
            $selectedTag: map-get($tags, $tagName);
            $font-size: nth($selectedTag, 1);
            $line-height: nth($selectedTag, 2);

            @if type-of($font-size) == 'list' {
                @include _header-font($font-size, $line-height);
            } @else {
                @include _text-font($font-size, $line-height);
            }

            @if $weight != none {
                @include _getWeight($weight);
            }
        }
    }
}
